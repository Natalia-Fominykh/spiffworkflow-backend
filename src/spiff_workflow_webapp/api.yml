openapi: "3.0.2"
info:
  version: 1.0.0
  title: Workflow Microservice
  license:
    name: MIT
servers:
  - url: http://localhost:5000/v1.0
# security:
#   - jwt: ['secret']
paths:
  /workflow-specification:
    # get:
    #   operationId: crc.api.workflow.all_specifications
    #   summary: Provides a list of workflows specifications that can be added to a study manually. Please note that Protocol Builder will handle this most of the time.
    #   tags:
    #     - Workflow Specifications
    #   parameters :
    #     - name : libraries
    #       in : query
    #       required : false
    #       description : True if we should return just library schemas
    #       schema :
    #         type : boolean
    #     - name : standalone
    #       in : query
    #       required : false
    #       description : True if we should return just standalone schemas
    #       schema :
    #         type : boolean
    #   responses:
    #     '200':
    #       description: An array of workflow specifications
    #       content:
    #         application/json:
    #           schema:
    #             type: array
    #             items:
    #               $ref: "#/components/schemas/WorkflowSpec"
    post:
      operationId: spiff_workflow_webapp.routes.process_api_blueprint.add_workflow_specification
      summary: Creates a new workflow specification with the given parameters.
      tags:
        - Workflow Specifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowSpec'
      responses:
        '200':
          description: Workflow specification created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowSpec"
  /workflow-specification/{spec_id}/file:
    parameters:
      - name: spec_id
        in: path
        required: true
        description: The unique id of an existing workflow specification to validate.
        schema:
          type: string
    # get:
    #   operationId: spiff_workflow_webapp.api.process_api_blueprint.get_files
    #   summary: Provide a list of workflow spec files for the given workflow_spec_id. IMPORTANT, only includes metadata, not the file content.
    #   tags:
    #     - Spec Files
    #   responses:
    #     '200':
    #       description: An array of file descriptions (not the file content)
    #       content:
    #         application/json:
    #          schema:
    #            type: array
    #            items:
    #              $ref: "#/components/schemas/File"
    post:
      operationId: spiff_workflow_webapp.routes.process_api_blueprint.add_file
      summary: Add a new workflow spec file
      tags:
        - Spec Files
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Metadata about the uploaded file, but not the file content.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/File"
  /workflow-specification/{spec_id}/file/{file_name}:
    parameters:
      - name: spec_id
        in: path
        required: true
        description: The unique id of an existing workflow specification to validate.
        schema:
          type: string
      - name: file_name
        in: path
        required: true
        description: The id of the spec file
        schema:
          type: string
    get:
      operationId: spiff_workflow_webapp.routes.process_api_blueprint.get_file
      summary: Returns metadata about the file
      tags:
        - Spec Files
      responses:
        '200':
          description: Returns the file information requested.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/File"
    # put:
    #   operationId: crc.api.spec_file.update
    #   summary: updates the given file to be the primary file and process, if so specified.
    #   tags:
    #     - Spec Files
    #   parameters:
    #     - name: is_primary
    #       in: query
    #       required: true
    #       description: Whether to make this the primary file for the workflow.
    #       schema:
    #         type: boolean
    #   requestBody:
    #     description: Log Pagination Request
    #     required: false
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/File'
    #   responses:
    #     '200':
    #       description: Returns the file information.
    #       content:
    #         application/json:
    #           schema:
    #             $ref: "#components/schemas/File"
    # delete:
    #   operationId: crc.api.spec_file.delete
    #   summary: Removes an existing workflow spec file.
    #   tags:
    #     - Spec Files
    #   responses:
    #     '204':
    #       description: The file was removed.




components:
  schemas:
    User:
      properties:
        uid:
          type: string
        email_address:
          type: string
        display_name:
          type: string
        affiliation:
          type: string
        eppn:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        title:
          type: string
    DataModel:
      properties:
        id:
          type: string
    WorkflowSpecDiffList:
      properties:
        workflow_spec_id:
          type: string
          example : top_level_workflow
        date_created :
          type: string
          example : 2020-12-09 16:55:12.951500+00:00
        location :
          type : string
          example : remote
        new :
          type : boolean
          example : false
    WorkflowSpecFilesList:
      properties:
        file_model_id:
          type : integer
          example : 171
        workflow_spec_id :
          type: string
          example : top_level_workflow
        filename :
          type: string
          example : data_security_plan.dmn
        date_created :
          type: string
          example : 2020-12-01 13:58:12.420333+00:00
        type:
          type : string
          example : dmn
        primary :
          type : boolean
          example : false
        content_type:
          type: string
          example : text/xml
        primary_process_id:
          type : string
          example : null
        md5_hash:
          type: string
          example: f12e2bbd-a20c-673b-ccb8-a8a1ea9c5b7b


    WorkflowSpecFilesDiff:
      properties:
        filename :
          type: string
          example : data_security_plan.dmn
        date_created :
          type: string
          example : 2020-12-01 13:58:12.420333+00:00
        type:
          type : string
          example : dmn
        primary :
          type : boolean
          example : false
        content_type:
          type: string
          example : text/xml
        primary_process_id:
          type : string
          example : null
        md5_hash:
          type: string
          example: f12e2bbd-a20c-673b-ccb8-a8a1ea9c5b7b
        location:
          type : string
          example : remote
        new:
          type: boolean
          example : false
    WorkflowSpecAll:
      properties:
        workflow_spec_id :
          type: string
          example : acaf1258-43b4-437e-8846-f612afa66811
        date_created :
          type: string
          example : 2020-12-01 13:58:12.420333+00:00
        md5_hash:
          type: string
          example: c30fd597f21715018eab12f97f9d4956
    Study:
      properties:
        id:
          type: integer
          example: 1234
        title:
          type: string
          example: The impact of fried pickles on beer consumption in bipedal software developers.
        last_updated:
          type: string
          format: date_time
          example: "2019-12-25T09:12:33.001Z"
        user_uid:
          type: string
          example: dhf8r
        status:
          type: string
          enum: ['in_progress', 'hold', 'open_for_enrollment', 'abandoned']
          example: done
        sponsor:
          type: string
          x-nullable: true
          example: "Sartography Pharmaceuticals"
        ind_number:
          type: string
          x-nullable: true
          example: "27b-6-42"
    StudyAssociate:
      properties:
        uid:
          type: string
          example: "dhf8r"
        access:
          type: boolean
          example: False
        role:
          type: string
          example: "TODO"
    DocumentDirectory:
      properties:
        level:
          type: string
          x-nullable: true
          example: "Ancillary Document"
        description:
          type: string
          x-nullable: true
          example: "Documents that are ancillary to the study"
        file:
          $ref: "#/components/schemas/File"
          x-nullable: true
        expanded:
          type: boolean
          example: False
        filecount:
          type: integer
          example: 1
        children:
          type: array
          items:
            $ref: "#/components/schemas/File"
    DataStore:
      properties:
        id:
          type: integer
          example: 1234
        key:
          type: string
          example: MyKey
        workflow_id:
          type: integer
          x-nullable: true
          example: 12
        study_id:
          type: integer
          x-nullable: true
          example: 42
        user_id:
          type: string
          x-nullable: true
          example: dhf8r
        task_id:
          type: string
          x-nullable: true
          example: MyTask
        spec_id:
          type: string
          x-nullable: true
          example: My Spec Name
        value:
          type: string
          x-nullable: true
          example: Some Value

    WorkflowSpec:
      properties:
        id:
          type: string
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
        primary_process_id:
          type: string
          nullable: true
        category_id:
          type: string
          nullable: true
        standalone:
          type: boolean
          example: false
          default: false
        workflow_spec_category:
          $ref: "#/components/schemas/WorkflowSpecCategory"
        is_status:
          type: boolean
          nullable: true
    WorkflowSpecCategory:
      properties:
        id:
          type: string
        name:
          type: string
        display_name:
          type: string
        display_order:
          type: integer
        workflows:
          type: array
          items:
            $ref: "#/components/schemas/Workflow"
    File:
      properties:
        id:
          type: number
        name:
          type: string
          example: "random_fact.bpmn"
        version:
          type: integer
        last_updated:
          type: string
          format: date_time
          example: "2019-12-25T09:12:33.001Z"
        type:
          type: string
        primary:
          type: boolean
        content_type:
          type: string
          example: "application/xml"
        workflow_spec_id:
          type: string
          example: "random_fact"
          x-nullable: true
        file:
          type: string
    Workflow:
      properties:
        id:
          readOnly: true
          type: integer
          format: int64
        status:
          type: string
          enum: ['new','user_input_required','waiting','complete']
        navigation:
          type: array
          items:
            $ref: "#/components/schemas/NavigationItem"
        next_task:
          $ref: "#/components/schemas/Task"
        workflow_spec_id:
          type: string
        spec_version:
          type: string
        is_latest_spec:
          type: boolean
        num_tasks_total:
          type: integer
        num_tasks_complete:
          type: integer
        num_tasks_incomplete:
          type: integer
        study_id:
          type: integer

      example:
        id: 291234
        status: 'user_input_required'
        workflow_spec_id: 'random_fact'
        spec_version: 'v1.1 [22,23]'
        is_latest_spec: True
        next_task:
          id: study_identification
          name: Study Identification
          title: IRB Review
          documentation: "# Heading 1\n\nMarkdown documentation text goes here"
          type: form
          state: ready
    Task:
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        title:
          type: string
        type:
          type: string
        state:
          type: string
        form:
          $ref: "#/components/schemas/Form"
        documentation:
          type: string
        data:
          type: object
        multi_instance_type:
          type: string
          enum: ['none', 'looping', 'parallel', 'sequential']
        multi_instance_count:
          type: number
        multi_instance_index:
          type: number
        process_name:
          type: string
        properties:
          type: object
      example:
        id: study_identification
        name: Study Identification
        title: IRB Review
        documentation: "# Heading 1\n\nMarkdown documentation text goes here"
        type: form
        state: ready
        form:
          "key": "irb_review_form"
          "fields":
            - "id": "irb_review_type"
              "type": "enum"
              "label": "Select IRB Review Type"
              "options":
                - id: "emergency_use"
                  name: "Emergency Use"
                - id: "humanitarian_device"
                  name: "Humanitarian Device"
                - id: "non_human"
                  name: "Non-Human"
                - id: "non_uva_agent"
                  name: "Non-UVA Agent"
                - id: "exempt"
                  name: "Exempt"
                - id: "non_engaged"
                  name: "Non-Engaged"
                - id: "expedited"
                  name: "Expedited"
                - id: "full_board"
                  name: "Full Board"
              "default_value": "Full Board"
              "validation":
                - name: "required"
                  config: "true"
              "properties":
                - id: "description"
                  value: "Description text goes here"
                - id: "help"
                  value: "# Heading 1\n\nMarkdown help text goes here"
                - id: "required_expression"
                  value: "model.my_boolean_field_id && model.my_enum_field_value !== 'something'"
                - id: "hide_expression"
                  value: "model.my_enum_field_value === 'something'"
    PaginatedTaskLog:
      properties:
          code:
            example: "email_sent"
            type: string
          level:
            example: "warning"
            type: string
          user:
            example: "email_sent"
            type: string
          page:
            type: integer
            example: 0
          per_page:
            type: integer
            example: 10
          sort_column:
            type: string
            example: "timestamp"
          sort_reverse:
            type: boolean
            example: false
          items:
            type: array
            items:
              $ref: "#/components/schemas/TaskLog"
          has_next:
            type: boolean
            example: true
          has_prev:
            type: boolean
            example: false
    TaskLog:
      properties:
          level:
            type: string
            example: "info"
          code:
            example: "email_sent"
            type: string
          message:
            example: "Approval email set to Jake in Accounting"
            type: string
          workflow_id:
            example: 42
            type: integer
          study_id:
            example: 187
            type: integer
          user_uid:
            example: "dhf8r"
            type: string
          timestamp:
            type: string
            format: date_time
            example: "2021-01-07T11:36:40.001Z"
    TaskEvent:
      properties:
          workflow:
            $ref: "#/components/schemas/Workflow"
          study:
            $ref: "#/components/schemas/Study"
          workflow_sec:
            $ref: "#/components/schemas/WorkflowSpec"
          spec_version:
            type: string
          action:
            type: string
          task_id:
            type: string
          task_type:
            type: string
          task_lane:
            type: string
          form_data:
            type: object
          mi_type:
            type: string
          mi_count:
            type: integer
          mi_index:
            type: integer
          process_name:
            type: string
          date:
            type: string
    Form:
      properties:
        key:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"
      example:
        "key": "irb_review_form"
        "fields":
          - "id": "irb_review_type"
            "type": "enum"
            "label": "Select IRB Review Type"
            "options":
              - id: "emergency_use"
                name: "Emergency Use"
              - id: "humanitarian_device"
                name: "Humanitarian Device"
              - id: "non_human"
                name: "Non-Human"
              - id: "non_uva_agent"
                name: "Non-UVA Agent"
              - id: "exempt"
                name: "Exempt"
              - id: "non_engaged"
                name: "Non-Engaged"
              - id: "expedited"
                name: "Expedited"
              - id: "full_board"
                name: "Full Board"
            "default_value": "Full Board"
            "validation":
              - name: "required"
                config: "true"
            "properties":
              - id: "description"
                value: "Description text goes here"
              - id: "help"
                value: "# Heading 1\n\nMarkdown help text goes here"
              - id: "required_expression"
                value: "model.my_boolean_field_id && model.my_enum_field_value !== 'something'"
              - id: "hide_expression"
                value: "model.my_enum_field_value === 'something'"
    Field:
      properties:
        id:
          type: string
          readOnly: true
        type:
          type: string
          enum: ['string', 'long', 'boolean', 'date', 'enum']
          readOnly: true
        label:
          type: string
          readOnly: true
        options:
          type: array
          items:
            $ref: "#/components/schemas/EnumFieldOption"
          readOnly: true
        default_value:
          type: string
          readOnly: true
        validation:
          type: array
          items:
            $ref: "#/components/schemas/FieldValidation"
          readOnly: true
        "properties":
          type: array
          items:
            $ref: "#/components/schemas/FieldProperty"
          readOnly: true
    EnumFieldOption:
      properties:
        id:
          type: string
        name:
          type: string
    FieldValidation:
      properties:
        name:
          type: string
        config:
          type: string
    FieldProperty:
      properties:
        id:
          type: string
        value:
          type: string
      example:
        id: "required_expression"
        value: "model.should_require"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: string
          format: string
          example: "access_denied"
        message:
          type: string
          example: "You do not have permission to view the requested study."
    Script:
      properties:
        name:
          type: string
          format: string
          example: "random_fact"
        description:
          type: string
          example: "Returns a random fact about a topic.  Provide an argument of either 'cat', 'norris', or 'buzzword'"
    LookupItem:
      properties:
        value:
          type: string
          format: string
          example: "1000"
        label:
          type: string
          example: "Chuck Norris"
        data:
          type: string
    NavigationItem:
      properties:
        id:
          type: number
          format: integer
          example: 5
        task_id:
          type: string
          format: uuid
          example: "1234123uuid1234"
        name:
          type: string
          example: "Task_Has_bananas"
        description:
          type: string
          example: "Has Bananas?"
        backtracks:
          type: boolean
          example: false
        level:
          type: integer
          example: 1
        indent:
          type: integer
          example: 2
        child_count:
          type: integer
          example: 4
        state:
          type: string
          enum: ['FUTURE', 'WAITING', 'READY', 'CANCELLED', 'COMPLETED','LIKELY','MAYBE']
          readOnly: true
        is_decision:
          type: boolean
          example: False
          readOnly: true
        task:
          $ref: "#/components/schemas/Task"
    Approval:
      properties:
        id:
          type: number
          format: integer
          example: 5
    ApprovalCounts:
      properties:
        PENDING:
          type: number
          format: integer
          example: 5
        APPROVED:
          type: number
          format: integer
          example: 5
        DECLINED:
          type: number
          format: integer
          example: 5
        CANCELED:
          type: number
          format: integer
          example: 5
        AWAITING:
          type: number
          format: integer
          example: 5
    GitRepo:
      properties:
#        remote:
#          type: string
#          example: sartography/crconnect-workflow-specs
        directory:
          type: string
          example: /home/cr-connect/sync_files
        branch:
          type: string
          example: dev
        merge_branch:
          type: string
          example: staging
        changes:
          type: array
          example: ['file_1.txt', 'file_2.txt']
        untracked:
          type: array
          example: ['a_file.txt', 'b_file.txt']

