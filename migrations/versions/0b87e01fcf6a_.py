"""empty message

Revision ID: 0b87e01fcf6a
Revises: 
Create Date: 2022-05-23 17:18:02.263955

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0b87e01fcf6a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('new_name_two', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('process_group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('principal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('NOT(user_id IS NULL AND group_id IS NULL)'),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('process_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('process_group_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['process_group_id'], ['process_group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_group_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'group_id', name='user_group_assignment_unique')
    )
    op.create_table('process_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('process_model_id', sa.Integer(), nullable=False),
    sa.Column('bpmn_json', sa.JSON(), nullable=True),
    sa.Column('start_in_seconds', sa.Integer(), nullable=True),
    sa.Column('end_in_seconds', sa.Integer(), nullable=True),
    sa.Column('process_initiator_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['process_initiator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['process_model_id'], ['process_model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission_target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('process_group_id', sa.Integer(), nullable=True),
    sa.Column('process_model_id', sa.Integer(), nullable=True),
    sa.Column('process_instance_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('NOT(process_group_id IS NULL AND process_model_id IS NULL AND process_instance_id IS NULL)'),
    sa.ForeignKeyConstraint(['process_group_id'], ['process_group.id'], ),
    sa.ForeignKeyConstraint(['process_instance_id'], ['process_instance.id'], ),
    sa.ForeignKeyConstraint(['process_model_id'], ['process_model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission_assignment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('principal_id', sa.Integer(), nullable=False),
    sa.Column('permission_target_id', sa.Integer(), nullable=False),
    sa.Column('grant_type', sa.Enum('grant', 'deny', name='grantdeny'), nullable=True),
    sa.Column('permission', sa.Enum('instantiate', 'administer', 'view_instance', name='permission'), nullable=True),
    sa.ForeignKeyConstraint(['permission_target_id'], ['permission_target.id'], ),
    sa.ForeignKeyConstraint(['principal_id'], ['principal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('permission_assignment')
    op.drop_table('permission_target')
    op.drop_table('process_instance')
    op.drop_table('user_group_assignment')
    op.drop_table('process_model')
    op.drop_table('principal')
    op.drop_table('user')
    op.drop_table('process_group')
    op.drop_table('group')
    # ### end Alembic commands ###
