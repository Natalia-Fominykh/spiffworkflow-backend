#!/usr/bin/env bash

function error_handler() {
  >&2 echo "Exited with BAD EXIT CODE '${2}' in ${0} script at line: ${1}."
  exit "$2"
}
trap 'error_handler ${LINENO} $?' ERR
set -o errtrace -o errexit -o nounset -o pipefail

tasks=""
if [[ "${1:-}" == "clean" ]]; then
  tasks="$tasks init"

  rm -rf migrations/

  # if [[ "${TEST_DATABASE_TYPE:-}" == "sqlite" ]]; then
  #   rm -f ./src/spiff_workflow_webapp/db.sqlite3
  # else
  #   mysql -uroot -e "DROP DATABASE IF EXISTS spiff_workflow_webapp_development"
  #   mysql -uroot -e "CREATE DATABASE spiff_workflow_webapp_development"
  #   mysql -uroot -e "DROP DATABASE IF EXISTS spiff_workflow_webapp_testing"
  #   mysql -uroot -e "CREATE DATABASE spiff_workflow_webapp_testing"
  # fi
fi
tasks="$tasks migrate upgrade"

for task in $tasks ; do
  FLASK_ENV=development FLASK_APP=src/spiff_workflow_webapp poetry run flask db "$task"
done

FLASK_ENV=testing FLASK_APP=src/spiff_workflow_webapp poetry run flask db upgrade
